AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A lambda to upload to S3
Parameters:
  Environment:
    Type: String
    AllowedValues: ['dev', 'staging', 'prod']
  LambdaName:
    Type: String
    Default: database-updater
Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join ['-', [!Ref LambdaName, !Ref Environment ]]
      Handler: main
      Runtime: go1.x
      Environment:
        Variables:
          EXAMPLE_S3_BUCKET: !Ref ExampleS3Bucket
      CodeUri: 
      MemorySize: 256
      Timeout: 600 
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: rate(3 hours)
      Tracing: Active
      Policies:
        - Statement:
            - Action:
                - s3:PutObject
              Effect: Allow
              Resource:
                - !Join ['/', [!GetAtt ExampleS3Bucket.Arn, "*"]]
      Tags:
        env: !Join ['-', ['medium-example', !Ref Environment ]]
        datadog: "true"
  LambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: LambdaFunction
    Properties:
      LogGroupName:
        Fn::Join:
        - ''
        - - /aws/lambda/
          - Ref: LambdaName
          - "-"
          - !Ref Environment
      RetentionInDays: 14
  ExampleS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['medium-example', !Ref Environment ]]
  ExampleS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: "ExampleS3Bucket"
      PolicyDocument:
        Statement:
          - 
            Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                - 
                  - "arn:aws:s3:::"
                  - 
                    Ref: "ExampleS3Bucket"
                  - "/*"
            Principal: "*"
Outputs:
  LambdaArn:
    Value: !GetAtt LambdaFunction.Arn
